---
- name: Run a command and print output
  hosts: all
  gather_facts: true

  tasks:
    - name: Run the command
      command: "/opt/nessus_agent/sbin/nessuscli agent status"
      register: command_output
      ignore_errors: true

    - name: Print the command output
      debug:
        var: command_output.stdout_lines

    - name: Ensure the output file directory exists
      file:
        path: "/tmp/html_output_{{ inventory_hostname }}.txt"
        state: touch

    - name: Create a text file with hostname in each line
      lineinfile:
        path: "/tmp/html_output_{{ inventory_hostname }}.txt"
        line: "{{ inventory_hostname }}: {{ item }}"
      loop: "{{ command_output.stdout_lines }}"

    - name: Fetch the output file to Ansible control node
      fetch:
        src: "/tmp/html_output_{{ inventory_hostname }}.txt"
        dest: "/tmp/"
        flat: yes

    - name: Assemble HTML files into a single file with the current date
      assemble:
        src: "/tmp/"
        dest: "/tmp/html_output_all_hosts_{{ lookup('pipe', 'date +%Y%m%d%H') }}.txt"
        regexp: "html_output_.*.txt"
      delegate_to: localhost

    - name: Convert content to HTML table format
      template:
        src: html_template.j2
        dest: "/tmp/html_output_table_{{ lookup('pipe', 'date +%Y%m%d%H') }}.html"
      vars:
        content_lines: "{{ file_content_str.split('\n') }}"

    - name: Fetch the HTML table file to Ansible control node
      fetch:
        src: "/tmp/html_output_table_{{ lookup('pipe', 'date +%Y%m%d%H') }}.html"
        dest: "/tmp/"
        flat: yes

    - name: Read content of the file on Ansible control node
      local_action: 
        module: slurp
        src: "/tmp/html_output_all_hosts_{{ lookup('pipe', 'date +%Y%m%d%H') }}.txt"
      register: file_content

    - name: Convert content from base64 to string
      set_fact:
        file_content_str: "{{ file_content['content'] | b64decode | decode('utf-8') }}"

    - name: Define variable for content_lines
      set_fact:
        content_lines: "{{ file_content_str.split('\n') }}"

    - name: Convert content to HTML table format
      template:
        src: html_template.j2
        dest: "/tmp/html_output_table_{{ lookup('pipe', 'date +%Y%m%d%H') }}.html"
      vars:
        content_lines: "{{ content_lines }}"

